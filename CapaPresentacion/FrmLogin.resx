<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AElFTkSuQmCC
</value>
  </data>
</root>